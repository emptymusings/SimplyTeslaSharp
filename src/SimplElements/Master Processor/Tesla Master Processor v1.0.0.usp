/*
Programmer: lamentary
Comments: Communicates with Tesla's servers to get detailed information and send commands/settings to a vehicle
Compatibility: Models S/3/X/Y
*/
/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
#SYMBOL_NAME "Tesla Master Processor v1.0.0"
#HINT "Master Interactions with Tesla Account"
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

#HELP_BEGIN

This module is designed to interact with Tesla Vehicles.  In order to 
interact with Tesla's servers, you will need to include this Master 
Processor to handle Authentication/Vehicle lists, and the Tesla Car 
Processor module to handle information and commands related to specific 
vehicles.

#HELP_END


/*******************************************************************************************
  Include Libraries
*******************************************************************************************/
// Include the Simpl# module
#USER_SIMPLSHARP_LIBRARY "Tesla Master v1.0.0"

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
*******************************************************************************************/
DIGITAL_INPUT 
			RequestToken, 
			RefreshCarList;
STRING_INPUT 
			email[65534], 
			password[65534];	
ANALOG_OUTPUT
			CarCount;
STRING_OUTPUT 
			TokenFb, 
			TokenCreatedFb, 
			TokenExpiresFb,
			RefreshTokenFb,
			CarId$[99];

/*******************************************************************************************
  Global Variables
*******************************************************************************************/
Main tesla;

/*******************************************************************************************
  Functions
*******************************************************************************************/

Function InitializeTesla()
{
	// Set the login information to the Simpl# module's cache
	tesla.Auth.Initialize(email, password);
}
    
Function GetTokenFromApi()
{
	// Set the login information for authentication
	InitializeTesla();
                      
	// Request a Token from the Tesla server
	tesla.Auth.SendTokenRequest();

	// Set the outputs for authentication information
	TokenFb = tesla.Auth.GetCurrentToken();
	TokenCreatedFb = tesla.Auth.TokenCreated;
	TokenExpiresFb = tesla.Auth.TokenExpires;
	RefreshTokenFb = tesla.Auth.RefreshToken;
}

Function GetCarList()
{
	INTEGER i;
	STRING carVal[255];
    VehicleListModel carList;
	
	// Refresh the list of vehicles from Tesla's servers                  
 	tesla.RefreshCars();
    
	carList = tesla.Cars;     

	CarCount = tesla.CarCount;
    
	// For each vehicle that has been returned, assign its ID to the appropriate output signal                          
	for (i = 1 to CarCount)
	{		
		if (IsSignalDefined(CarId$[i]))
		{
			PRINT("Set ID for Car %u",i);
			CarId$[i] = carList.Vehicles[i-1].Id;
		}
	}	
}


/*******************************************************************************************
  Event Handlers
*******************************************************************************************/

ThreadSafe CHANGE email
{
	tesla.Auth.UserName = email;}

ThreadSafe CHANGE password
{
	tesla.Auth.Password = password;
}


ThreadSafe PUSH RequestToken
{
	GetTokenFromApi();
}

ThreadSafe PUSH RefreshCarList
{
	GetCarList();
}
